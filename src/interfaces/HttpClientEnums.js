"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpContentEncoding;
(function (HttpContentEncoding) {
    HttpContentEncoding["utf8"] = "utf-8";
})(HttpContentEncoding = exports.HttpContentEncoding || (exports.HttpContentEncoding = {}));
var HttpMethod;
(function (HttpMethod) {
    HttpMethod["get"] = "GET";
    HttpMethod["head"] = "HEAD";
    HttpMethod["post"] = "POST";
    HttpMethod["put"] = "PUT";
    HttpMethod["delete"] = "DELETE";
    HttpMethod["connect"] = "CONNECT";
    HttpMethod["options"] = "OPTIONS";
    HttpMethod["patch"] = "PATCH";
})(HttpMethod = exports.HttpMethod || (exports.HttpMethod = {}));
var HttpResponseType;
(function (HttpResponseType) {
    HttpResponseType["unknown"] = "";
    HttpResponseType["arrayBuffer"] = "arraybuffer";
    HttpResponseType["blob"] = "blob";
    HttpResponseType["document"] = "document";
    HttpResponseType["json"] = "json";
    HttpResponseType["text"] = "text";
})(HttpResponseType = exports.HttpResponseType || (exports.HttpResponseType = {}));
var HttpStatusCode;
(function (HttpStatusCode) {
    HttpStatusCode[HttpStatusCode["continue"] = 100] = "continue";
    HttpStatusCode[HttpStatusCode["switchingProtocols"] = 101] = "switchingProtocols";
    HttpStatusCode[HttpStatusCode["ok"] = 200] = "ok";
    HttpStatusCode[HttpStatusCode["created"] = 201] = "created";
    HttpStatusCode[HttpStatusCode["accepted"] = 202] = "accepted";
    HttpStatusCode[HttpStatusCode["nonAuthoritativeInformation"] = 203] = "nonAuthoritativeInformation";
    HttpStatusCode[HttpStatusCode["noContent"] = 204] = "noContent";
    HttpStatusCode[HttpStatusCode["resetContent"] = 205] = "resetContent";
    HttpStatusCode[HttpStatusCode["partialContent"] = 206] = "partialContent";
    HttpStatusCode[HttpStatusCode["multipleChoices"] = 300] = "multipleChoices";
    HttpStatusCode[HttpStatusCode["movedPermanently"] = 301] = "movedPermanently";
    HttpStatusCode[HttpStatusCode["found"] = 302] = "found";
    HttpStatusCode[HttpStatusCode["seeOther"] = 303] = "seeOther";
    HttpStatusCode[HttpStatusCode["notModified"] = 304] = "notModified";
    HttpStatusCode[HttpStatusCode["useProxy"] = 305] = "useProxy";
    HttpStatusCode[HttpStatusCode["temporaryRedirect"] = 307] = "temporaryRedirect";
    HttpStatusCode[HttpStatusCode["badRequest"] = 400] = "badRequest";
    HttpStatusCode[HttpStatusCode["unauthorized"] = 401] = "unauthorized";
    HttpStatusCode[HttpStatusCode["paymentRequired"] = 402] = "paymentRequired";
    HttpStatusCode[HttpStatusCode["forbidden"] = 403] = "forbidden";
    HttpStatusCode[HttpStatusCode["notFound"] = 404] = "notFound";
    HttpStatusCode[HttpStatusCode["methodNotAllowed"] = 405] = "methodNotAllowed";
    HttpStatusCode[HttpStatusCode["notAcceptable"] = 406] = "notAcceptable";
    HttpStatusCode[HttpStatusCode["proxyAuthenticationRequired"] = 407] = "proxyAuthenticationRequired";
    HttpStatusCode[HttpStatusCode["requestTimeout"] = 408] = "requestTimeout";
    HttpStatusCode[HttpStatusCode["conflict"] = 409] = "conflict";
    HttpStatusCode[HttpStatusCode["gone"] = 410] = "gone";
    HttpStatusCode[HttpStatusCode["lengthRequired"] = 411] = "lengthRequired";
    HttpStatusCode[HttpStatusCode["preconditionFailed"] = 412] = "preconditionFailed";
    HttpStatusCode[HttpStatusCode["requestEntityTooLarge"] = 413] = "requestEntityTooLarge";
    HttpStatusCode[HttpStatusCode["requestUriTooLong"] = 414] = "requestUriTooLong";
    HttpStatusCode[HttpStatusCode["unsupportedMediaType"] = 415] = "unsupportedMediaType";
    HttpStatusCode[HttpStatusCode["requestedRangeNotSatisfiable"] = 416] = "requestedRangeNotSatisfiable";
    HttpStatusCode[HttpStatusCode["expectationFailed"] = 417] = "expectationFailed";
    HttpStatusCode[HttpStatusCode["unprocessableEntity"] = 422] = "unprocessableEntity";
    HttpStatusCode[HttpStatusCode["tooManyRequests"] = 429] = "tooManyRequests";
    HttpStatusCode[HttpStatusCode["internalServerError"] = 500] = "internalServerError";
    HttpStatusCode[HttpStatusCode["notImplemented"] = 501] = "notImplemented";
    HttpStatusCode[HttpStatusCode["badGateway"] = 502] = "badGateway";
    HttpStatusCode[HttpStatusCode["serviceUnavailable"] = 503] = "serviceUnavailable";
    HttpStatusCode[HttpStatusCode["gatewayTimeout"] = 504] = "gatewayTimeout";
    HttpStatusCode[HttpStatusCode["httpVersionNotSupported"] = 505] = "httpVersionNotSupported";
})(HttpStatusCode = exports.HttpStatusCode || (exports.HttpStatusCode = {}));
